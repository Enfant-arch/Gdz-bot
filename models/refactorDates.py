import cv2
import numpy as np
import asyncio


async def refactor_subject(subject):

    if subject == "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞":
        return "matematika"

    elif subject == "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫":
        return "english"

    elif subject == "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫üñä":
        return "russkii_yazik"

    elif subject == "–ê–ª–≥–µ–±—Ä–∞‚ûï":
        return "algebra"
    elif subject == "–ì–µ–æ–º–µ—Ç—Ä–∏—èüìê":
        return "geometria"

    elif subject == "–§–∏–∑–∏–∫–∞üìä":
        return "fizika"

    elif subject == "–•–∏–º–∏—è":
        return "himiya"

    elif subject == "–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫":
        return "nemeckiy_yazik"

    elif subject == "–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —è–∑—ã–∫":
        return "ukrainskiy_yazik"

    elif subject == "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫":
        return "francuzskiy_yazik"

    elif subject == "–ë–∏–æ–ª–æ–≥–∏—è":
        return "biologiya"

    elif subject == "–ò—Å—Ç–æ—Ä–∏—è":
        return "istoriya"

    elif subject == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞":
        return "informatika"

    elif subject == "–û–ë–ñ":
        return "obj"

    elif subject == "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è":
        return "geografiya"

async def refactor_class_(class_):
    if class_ == "11 –∫–ª–∞—Å—Å":
        return "11"
    elif class_ == "10 –∫–ª–∞—Å—Å":
        return "10"
    elif class_ == "9 –∫–ª–∞—Å—Å":
        return "9"
    elif class_=="8 –∫–ª–∞—Å—Å":
        return "8"
    elif class_=="7 –∫–ª–∞—Å—Å":
        return "7"
    elif class_=="6 –∫–ª–∞—Å—Å":
        return "6"
    elif class_=="5 –∫–ª–∞—Å—Å":
        return "5"


async def refactor_authors_11Algebra(author):
    if author == "–ö–æ–ª–º–æ–≥–æ—Ä–æ–≤":
        return "kolmogorov_2010"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á –±–∞–∑–æ–≤—ã–π":
        return "mordkovich_2009"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á":
        return "zadachnik-mordkovich"
    elif author == "–ê–ª–∏–º–æ–≤":
        return "alimov"

async def refactor_authors_10Algebra(author):
    if author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á":
        return "mordkovich_semenov"

    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á –±–∞–∑–æ–≤—ã–π":
        return "mordkovich_2009"
    elif author == "–ê–ª–∏–º–æ–≤":
        return "alimov"
    elif author == "–ö–æ–ª–º–æ–≥–æ—Ä–æ–≤":
        return "kolmogorov_2010"

async def refactor_authors_9Algebra(author):
    if author == "–ú–∞–∫–∞—Ä—ã—á–µ–≤":
        return "makarychev"
    elif author == "–ú–∞–∫–∞—Ä—ã—á–µ–≤ –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "makarichev-uglublennoe-izuchenie"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á":
        return "morodkovich"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "mordkovich-uglublennoe-izuchenie"
    elif author == "–ú–µ—Ä–∑–ª—è–∫":
        return "merzlyak"
    elif author == "–ú–µ—Ä–∑–ª—è–∫ –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "merzlyak-polyakov"

async def refactor_authors_8Algebra(author):
    if author == "–ú–∞–∫–∞—Ä—ã—á–µ–≤":
        return "makarychev_2012"
    elif author == "–ú–∞–∫–∞—Ä—ã—á–µ–≤ –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "macarichev-uglublennij-uroven"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á":
        return "morodkovich"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "mordkovich-uglublennyj-zadachnik"
    elif author == "–ú–µ—Ä–∑–ª—è–∫":
        return "merzlyak"
    elif author == "–ú–µ—Ä–∑–ª—è–∫ –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "merzlyak-polyakov"
    elif author == "–ê–ª–∏–º–æ–≤":
        return "alimov_2012"

async def refactor_authors_7Algebra(author):
    if author == "–ú–∞–∫–∞—Ä—ã—á–µ–≤":
        return "makarychev_2012"
    elif author == "–î–æ—Ä–æ—Ñ–µ–µ–≤":
        return "dorofeev"
    elif author == "–ú–æ—Ä–¥–∫–æ–≤–∏—á":
        return "mordkovich"
    elif author == "–ö–æ–ª—è–≥–∏–Ω":
        return "kolyagin-tkacheva"
    elif author == "–ú–µ—Ä–∑–ª—è–∫":
        return "merzlyak-polonskij-yakir"
    elif author == "–ù–∏–∫–æ–ª—å—Å–∫–∏–π":
        return "nikolskij"
    
async def refactor_authors_11Geometry(author):
    if author == "–ê—Ç–∞–Ω–∞—Å—è–Ω":
        return "atanasjan"
    elif author == "–ü–æ–≥–æ—Ä–µ–ª–æ–≤":
        return "pogorelov"
    #elif author == "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤":
        return "kolyagin-tkacheva"
    #elif author == "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤ —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–π":
        return "merzlyak-polonskij-yakir"
async def refactor_authors_10Geometry(author):
    if author == "–ê—Ç–∞–Ω–∞—Å—è–Ω":
        return "atanasjan"
    elif author == "–ü–æ–≥–æ—Ä–µ–ª–æ–≤":
        return "pogorelov"

async def refactor_authors_9Geometry(author):
    if author == "–ê—Ç–∞–Ω–∞—Å—è–Ω":
        return "atanasjan"
    elif author == "–ú—Ä–µ–∑–ª—è–∫":
        return "merzljak-polonskij"
    elif author == "–ê—Ç–∞–Ω–∞—Å—è–Ω —Ä–∞–±. —Ç–µ—Ç—Ä–∞–¥—å":
        return "atanasyan"
    elif author == "–ü–æ–≥–æ—Ä–µ–ª–æ–≤":
        return "pogorelov"

async def refactor_authors_8Geometry(author):
    if author == "–ê—Ç–∞–Ω–∞—Å—è–Ω":
        return "atanasjan"
    elif author == "–ú–µ—Ä–∑–ª—è–∫":
        return "merzlyak"
    elif author == "–ê—Ç–∞–Ω–∞—Å—è–Ω —Ä–∞–±. —Ç–µ—Ç—Ä–∞–¥—å":
        return "atanasyanWN"
    elif author == "–ü–æ–≥–æ—Ä–µ–ª–æ–≤":
        return "pogorelov"
async def refactor_authors_7Geometry(author):
    if author == "–ê—Ç–∞–Ω–∞—Å—è–Ω":
        return "atanasjan"
    elif author == "–ú–µ—Ä–∑–ª—è–∫":
        return "merzlyak"
    elif author == "–ú–µ—Ä–∑–ª—è–∫ —Ä–∞–±. —Ç–µ—Ç—Ä–∞–¥—å":
        return "merzlyakWorkNote"
    elif author == "–ü–æ–≥–æ—Ä–µ–ª–æ–≤":
        return "pogorelov"



async def refactor_authors_11Phith(author):
    if author == "–ó–∞–¥–∞—á–Ω–∏–∫ –†—ã–º–∫–µ–≤–∏—á":
        return "rymkevich"
    elif author == "–°—Ç–µ–ø–∞–Ω–æ–≤ –°–±–æ—Ä–Ω–∏–∫ –∑–∞–¥–∞—á":
        return "stepanova"
    elif author == "–ü–∞—Ä—Ñ–µ–Ω—Ç—å–µ–≤–∞ –°–±–æ—Ä–Ω–∏–∫ –∑–∞–¥–∞—á":
        return "parfenova"
    elif author == "–ì—Ä–æ–º–æ–≤":
        return "gromov"


async def refactor_authors_10Phith(author):
    if author == "–†—ã–º–∫–µ–≤–∏—á":
        return "rymkevich"
    elif author == "–ú—è–∫–∏—à–µ–≤":
        return "_mjakishev"
    #elif author == "–ü–∞—Ä—Ñ–µ–Ω—Ç—å–µ–≤–∞ –°–±–æ—Ä–Ω–∏–∫ –∑–∞–¥–∞—á":
      #  return "parfenova"
    #elif author == "–ì—Ä–æ–º–æ–≤":
     #   return "gromov"

async def refactor_authors_9Phith(author):
    if author == "–ü–µ—Ä—ã—à–∫–∏–Ω —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è":
        return "perishkin"
    elif author == "–ì–µ–Ω–¥–µ–Ω—à—Ç–µ–π–Ω –∑–∞–¥—á–∞–Ω–∏–∫":
        return "gendenshtein-zadachnik"
    elif author == "–õ—É–∫–∞—à–∏":
        return "lukashi"

async def refactor_authors_8Phith(author):
    if author == "–ü–µ—Ä—ã—à–∫–∏–Ω —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è":
        return "perishkin"
    elif author == "–ì–µ–Ω–¥–µ–Ω—à—Ç–µ–π–Ω –∑–∞–¥—á–∞–Ω–∏–∫":
        return "gendenshtein-zadachnik"
    elif author == "–õ—É–∫–∞—à–∏":
        return "lukashi"

async def refactor_authors_7Phith(author):
    if author == "–ü–µ—Ä—ã—à–∫–∏–Ω —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è":
        return "perishkin"
    elif author == "–õ—É–∫–∞—à–∏":
        return "lukashi"






async def refactor_authors_11Russian(author):
    if author == "–ì–æ–ª—å—Ü–æ–≤–∞ –ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å":
        return "golcova"
    elif author == "–í–ª–∞—Å–µ–Ω–∫–æ–≤":
        return "vlasenkov"
    elif author == "–ì—Ä–µ–∫–æ–≤":
        return "grekov"
    elif author == "–ì—Ä–æ–º–æ–≤":
        return "gromov"

async def refactor_authors_10Russian(author):
    if author == "–†—ã–º–∫–µ–≤–∏—á":
        return "rymkevich"
    elif author == "–ú—è–∫–∏—à–µ–≤":
        return "_mjakishev"
    #elif author == "–ü–∞—Ä—Ñ–µ–Ω—Ç—å–µ–≤–∞ –°–±–æ—Ä–Ω–∏–∫ –∑–∞–¥–∞—á":
      #  return "parfenova"
    #elif author == "–ì—Ä–æ–º–æ–≤":
     #   return "gromov"


async def refactor_authors_9Russian(author):
    if author == "–õ–∞–¥—ã–∂–µ–Ω—Å–∫–∞—è":
        return "trosteva"
    elif author == "–†–∞–∑—É–º–æ–≤—Å–∫–∞—è":
        return "razumovskaya"
    elif author == "–ë–∞—Ä—Ö—É–¥–∞—Ä–æ–≤":
        return "bahdurov"
    elif author == "–†—ã–±—á–µ–Ω–∫–æ–≤–∞":
        return "ribacheva"

async def refactor_authors_8Russian(author):
    if author == "–õ–∞–¥—ã–∂–µ–Ω—Å–∫–∞—è":
        return "trosteva"
    elif author == "–†–∞–∑—É–º–æ–≤—Å–∫–∞—è":
        return "razumovskaya"
    elif author == "–ë–∞—Ä—Ö—É–¥–∞—Ä–æ–≤":
        return "bahdurov"
    elif author == "–†—ã–±—á–µ–Ω–∫–æ–≤–∞":
        return "ribacheva"

async def refactor_authors_7Russian(author):
    if author == "–õ–∞–¥—ã–∂–µ–Ω—Å–∫–∞—è":
        return "ladishzkaya"
    elif author == "–†–∞–∑—É–º–æ–≤—Å–∫–∞—è":
        return "razumovskaya"
    elif author == "–ï—Ñ—Ä–µ–º–æ–≤–∞":
        return "efremova"
    elif author == "–†—ã–±—á–µ–Ω–∫–æ–≤–∞":
        return "ribacheva"

async def refactor_authors_6Russian(author):
    if author == "–õ–∞–¥—ã–∂–µ–Ω—Å–∫–∞—è":
        return "ladishzkaya"
    elif author == "–†–∞–∑—É–º–æ–≤—Å–∫–∞—è":
        return "razumovskaya"
    elif author == "–®–º–µ–ª–µ–≤":
        return "shmelev"
    elif author == "–†—ã–±—á–µ–Ω–∫–æ–≤–∞":
        return "ribacheva"
    elif author == "–õ—å–≤–æ–≤–∞":
        return "livova"

async def refactor_authors_5Russian(author):
    if author == "–õ–∞–¥—ã–∂–µ–Ω—Å–∫–∞—è":
        return "ladishzkaya"
    elif author == "–†–∞–∑—É–º–æ–≤—Å–∫–∞—è":
        return "razumovskaya"
    elif author == "–®–º–µ–ª–µ–≤":
        return "shmelev"
    elif author == "–†—ã–±—á–µ–Ω–∫–æ–≤–∞":
        return "ribacheva"
    elif author == "–õ—å–≤–æ–≤–∞":
        return "livova"
    elif author == "–ï—Ñ—Ä–µ–º–æ–≤–∞":
        return "efremova"

async def refactor_authors_11English(author):
    if author == "Enjoy":
        return "enjoy"
    elif author == "Enjoy –†–∞–± —Ç–µ—Ç—Ä–∞–¥—å":
        return "enjoywn"
    elif author == "–ö—É–∑–æ–≤–ª–µ–≤":
        return "kuzolev"
    elif author == "–ö—É–∑–æ–≤–ª–µ–≤ –†–∞–± —Ç–µ—Ç—Ä–∞–¥—å":
        return "kuzolevwn"
    elif author == "–ê—Ñ–∞–Ω–∞—Å—å–µ–≤–∞":
        return "afanaseva"
    elif author == "–ê—Ñ–∞–Ω–∞—Å—å–µ–≤–∞ –†–∞–± —Ç–µ—Ç—Ä–∞–¥—å":
        return "afanasevawn"
    elif author == "Spotlight":
        return "spotlight"
    elif author == "Spotlight –†–∞–± —Ç–µ—Ç—Ä–∞–¥—å":
        return "spotlightwn"